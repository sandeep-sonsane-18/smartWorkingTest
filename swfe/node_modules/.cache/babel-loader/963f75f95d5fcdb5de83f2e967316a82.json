{"ast":null,"code":"import CreatePropertyData from './components/CreatePropertyData.vue';\nimport PropertyListing from './components/PropertyListing.vue';\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  components: {\n    CreatePropertyData,\n    PropertyListing\n  },\n  data() {\n    return {\n      isCreate: false,\n      formData: {}\n    };\n  },\n  methods: {\n    showForm(flag) {\n      if (flag == 'openForm') {\n        this.isCreate = true;\n      } else {\n        this.isCreate = !this.isCreate;\n      }\n      this.goto();\n    },\n    goto() {\n      // var element = this.$refs[refName];\n      // const [el] = element;\n      // if (el) {\n      //   el.scrollIntoView({ behavior: \"smooth\" });\n      // }\n\n      document.getElementById('#propertyForm').scrollIntoView({\n        behavior: \"smooth\"\n      });\n    },\n    fetchPropertyDataToUpdate(id, openFlag) {\n      axios.get(\"http://localhost:8000/api/fetchPropertyDetails/\" + id).then(response => {\n        console.log(response);\n        this.formData = response.data;\n        this.showForm(openFlag);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};\n\n//Modal JS\n// Get the modal\nvar modal = document.getElementById(\"myModal\");\n\n// Get the button that opens the modal\nvar btn = document.getElementById(\"myBtn\");\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks the button, open the modal \nbtn.onclick = function () {\n  modal.style.display = \"block\";\n};\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function () {\n  modal.style.display = \"none\";\n};\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function (event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n};","map":{"version":3,"mappings":"AAqBA,OAAOA,kBAAiB,MAAO,qCAAoC;AACnE,OAAOC,eAAc,MAAO,kCAAiC;AAC7D,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,kBAAkB;IAClBC;EACF,CAAC;EACDI,IAAG,GAAK;IACF,OAAO;MACHC,QAAQ,EAAC,KAAK;MACdC,QAAQ,EAAC,CAAC;IACd;EACN,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,CAACC,IAAI,EAAE;MACb,IAAGA,IAAG,IAAK,UAAU,EAAC;QACpB,IAAI,CAACJ,QAAO,GAAI,IAAI;MACtB,OAAO;QACL,IAAI,CAACA,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;MAChC;MACA,IAAI,CAACK,IAAI,EAAE;IACb,CAAC;IACDA,IAAI,GAAG;MACL;MACA;MACA;MACA;MACA;;MAEAC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,cAAc,CAAC;QACtDC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;IACDC,yBAAyB,CAACC,EAAE,EAAEC,QAAQ,EAAE;MACtChB,KAAK,CAACiB,GAAG,CAAC,iDAAiD,GAACF,EAAE,EACvDG,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ;QAClB,IAAI,CAACd,QAAO,GAAIc,QAAQ,CAAChB,IAAI;QAC7B,IAAI,CAACI,QAAQ,CAACS,QAAQ,CAAC;MAC3B,CAAC,EACAM,KAAK,CAACC,GAAE,IAAK;QACVH,OAAO,CAACC,GAAG,CAACE,GAAG;MACnB,CAAC;IACT;EACF;AACF;;AAEA;AACA;AACA,IAAIC,KAAI,GAAId,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;;AAE9C;AACA,IAAIc,GAAE,GAAIf,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;;AAE1C;AACA,IAAIe,IAAG,GAAIhB,QAAQ,CAACiB,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;AAEtD;AACAF,GAAG,CAACG,OAAM,GAAI,YAAW;EACvBJ,KAAK,CAACK,KAAK,CAACC,OAAM,GAAI,OAAO;AAC/B;;AAEA;AACAJ,IAAI,CAACE,OAAM,GAAI,YAAW;EACxBJ,KAAK,CAACK,KAAK,CAACC,OAAM,GAAI,MAAM;AAC9B;;AAEA;AACAC,MAAM,CAACH,OAAM,GAAI,UAASI,KAAK,EAAE;EAC/B,IAAIA,KAAK,CAACC,MAAK,IAAKT,KAAK,EAAE;IACzBA,KAAK,CAACK,KAAK,CAACC,OAAM,GAAI,MAAM;EAC9B;AACF","names":["CreatePropertyData","PropertyListing","axios","name","components","data","isCreate","formData","methods","showForm","flag","goto","document","getElementById","scrollIntoView","behavior","fetchPropertyDataToUpdate","id","openFlag","get","then","response","console","log","catch","err","modal","btn","span","getElementsByClassName","onclick","style","display","window","event","target"],"sourceRoot":"","sources":["E:\\smartWorking\\swfe\\src\\App.vue"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <div>\n    <button @click=\"showForm()\" id=\"myBtn\" class=\"submit right\">Create</button>\n  </div>\n  <!-- The Modal -->\n  <div id=\"myModal\" class=\"modal\">\n\n    <!-- Modal content -->\n    <div class=\"modal-content\">\n      <span class=\"close\">&times;</span>\n      <p>Some text in the Modal..</p>\n    </div>\n\n  </div>\n\n  <CreatePropertyData v-show=\"isCreate\" v-bind:editFormData=\"formData\" ref=\"createProperty\"/>\n  <PropertyListing msg=\"Welcome Admin!\" @fetchPropertyDataToUpdate=\"fetchPropertyDataToUpdate\"/>\n</template>\n\n<script>\nimport CreatePropertyData from './components/CreatePropertyData.vue'\nimport PropertyListing from './components/PropertyListing.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  components: {\n    CreatePropertyData,\n    PropertyListing,\n  },\n  data () {\n        return {\n            isCreate:false,\n            formData:{}\n        }\n  },\n  methods: {\n    showForm(flag) {\n      if(flag == 'openForm'){\n        this.isCreate = true;  \n      } else {\n        this.isCreate = !this.isCreate;\n      }\n      this.goto();\n    },\n    goto() {\n      // var element = this.$refs[refName];\n      // const [el] = element;\n      // if (el) {\n      //   el.scrollIntoView({ behavior: \"smooth\" });\n      // }\n\n      document.getElementById('#propertyForm').scrollIntoView({\n        behavior: \"smooth\"\n      });\n    },\n    fetchPropertyDataToUpdate(id, openFlag) {\n      axios.get(\"http://localhost:8000/api/fetchPropertyDetails/\"+id)\n            .then(response => {\n              console.log(response)\n                this.formData = response.data;\n                this.showForm(openFlag);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n  }\n}\n\n//Modal JS\n// Get the modal\nvar modal = document.getElementById(\"myModal\");\n\n// Get the button that opens the modal\nvar btn = document.getElementById(\"myBtn\");\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks the button, open the modal \nbtn.onclick = function() {\n  modal.style.display = \"block\";\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}\n\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.submit {\n  font-size: 15px;\n  color: #fff;\n  background: #222;\n  padding: 6px 12px;\n  border: none;\n  margin-top: 8px;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n/* MODAL CSS */\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  padding-top: 100px; /* Location of the box */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n  background-color: #fefefe;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n}\n\n/* The Close Button */\n.close {\n  color: #aaaaaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}