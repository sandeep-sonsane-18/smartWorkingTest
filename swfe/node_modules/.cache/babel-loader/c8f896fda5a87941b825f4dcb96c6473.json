{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    editFormData: Object\n  },\n  watch: {\n    editFormData: {\n      // the callback will be called immediately after the start of the observation\n      immediate: true,\n      handler(val, oldVal) {\n        // do your stuff\n        this.form = val;\n        this.form.isUpdate = true;\n        this.setImage = val.image_url;\n        console.log('Prop changed: ', val, ' | was: ', oldVal);\n      }\n    }\n    // function(newVal, oldVal) { // watch it\n    //   this.form = newVal;\n    //   console.log('Prop changed: ', newVal, ' | was: ', oldVal)\n    // }\n  },\n\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      gender: \"\",\n      formSubmitted: false,\n      setImage: '',\n      image_url: '',\n      property_types: [],\n      form: {\n        county: '',\n        country: '',\n        town: '',\n        postcode: '',\n        description: '',\n        displayable_name: '',\n        image_url: '',\n        no_of_bedrooms: 1,\n        no_of_bathrooms: 1,\n        price: 0,\n        property_type: '',\n        for_sale_rent: 'For Rent',\n        isUpdate: false\n      },\n      formErrors: {\n        county: '',\n        country: '',\n        town: '',\n        postcode: '',\n        description: '',\n        displayable_name: '',\n        image_url: '',\n        no_of_bedrooms: '',\n        no_of_bathrooms: '',\n        price: '',\n        property_type: '',\n        for_sale_rent: ''\n      },\n      errorsMessages: {\n        county: {\n          required: 'This field is required'\n        },\n        country: {\n          required: 'This field is required'\n        },\n        town: {\n          required: 'This field is required'\n        },\n        postcode: {\n          required: 'This field is required'\n        },\n        description: {\n          required: 'This field is required'\n        },\n        displayable_name: {\n          required: 'This field is required'\n        },\n        image_url: {\n          required: 'This field is required',\n          allowed: 'Only Jpg files allowed'\n        },\n        no_of_bedrooms: {\n          required: 'This field is required'\n        },\n        no_of_bathrooms: {\n          required: 'This field is required'\n        },\n        price: {\n          required: 'Invalid amount'\n        },\n        property_type: {\n          required: 'This field is required'\n        },\n        for_sale_rent: {\n          required: 'This field is required'\n        }\n      }\n    };\n  },\n  methods: {\n    submitForm: function () {\n      this.form.image_url = this.image_url;\n      if (!this.validateForm(this.form)) {\n        return false;\n      } else {\n        axios.post('http://localhost:8000/api/savePropertyDetails', this.form, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(response => function () {\n          console.log(response);\n        }).catch(response => function () {\n          console.log(response);\n        });\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      }\n    },\n    handleFileUpload(event) {\n      this.image_url = event.target.files[0];\n    },\n    removeErrorMessage(tag) {\n      this.formErrors[tag] = '';\n    },\n    validateForm(data) {\n      var errorCount = 0;\n      if (data.county == '') {\n        this.formErrors.county = this.errorsMessages.county.required;\n        errorCount + 1;\n      }\n      if (data.country == '') {\n        this.formErrors.country = this.errorsMessages.country.required;\n        errorCount + 1;\n      }\n      if (data.postcode == '') {\n        this.formErrors.postcode = this.errorsMessages.postcode.required;\n        errorCount + 1;\n      }\n      if (data.description == '') {\n        this.formErrors.description = this.errorsMessages.description.required;\n        errorCount + 1;\n      }\n      if (data.displayable_name == '') {\n        this.formErrors.displayable_name = this.errorsMessages.displayable_name.required;\n        errorCount + 1;\n      }\n      if (data.property_type == '') {\n        this.formErrors.property_type = this.errorsMessages.property_type.required;\n        errorCount + 1;\n      }\n      if (this.image_url.length == 0 && this.setImage == '') {\n        this.formErrors.image_url = this.errorsMessages.image_url.required;\n        errorCount + 1;\n      }\n      if (this.image_url != '' && this.image_url['type'] != 'image/jpeg') {\n        this.formErrors.image_url = this.errorsMessages.image_url.allowed;\n        document.getElementById('file').value = '';\n        errorCount + 1;\n      }\n      if (data.price <= 0) {\n        this.formErrors.price = this.errorsMessages.price.required;\n        errorCount + 1;\n      }\n      if (errorCount > 0) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  created() {\n    axios.get(\"http://localhost:8000/api/fetchPropertyTypes\").then(response => {\n      this.property_types = response.data;\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","props","editFormData","Object","watch","immediate","handler","val","oldVal","form","isUpdate","setImage","image_url","console","log","data","name","email","gender","formSubmitted","property_types","county","country","town","postcode","description","displayable_name","no_of_bedrooms","no_of_bathrooms","price","property_type","for_sale_rent","formErrors","errorsMessages","required","allowed","methods","submitForm","validateForm","post","headers","then","response","catch","setTimeout","window","location","reload","handleFileUpload","event","target","files","removeErrorMessage","tag","errorCount","length","document","getElementById","value","created","get","err"],"sourceRoot":"","sources":["E:\\smartWorking\\swfe\\src\\components\\CreatePropertyData.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <form @submit.prevent=\"submitForm\" v-if=\"!formSubmitted\">\r\n        <span>County: </span>\r\n        <input \r\n          v-model=\"form.county\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your county\" \r\n          @keyup=\"removeErrorMessage('county')\"\r\n        /><sub class=\"red-text\">{{ formErrors.county }}</sub><br>\r\n        <span>Country: </span>\r\n        <input \r\n          v-model=\"form.country\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your country\" \r\n          @keyup=\"removeErrorMessage('country')\"\r\n        /><sub class=\"red-text\">{{ formErrors.country }}</sub><br>\r\n        <span>Town: </span>\r\n        <input \r\n          v-model=\"form.town\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your town\"\r\n          @keyup=\"removeErrorMessage('town')\"\r\n        /><sub class=\"red-text\">{{ formErrors.town }}</sub><br>\r\n        <span>Postcode: </span>\r\n        <input \r\n          v-model=\"form.postcode\"\r\n          type=\"number\"\r\n          placeholder=\"Enter your postcode\"\r\n          @keyup=\"removeErrorMessage('postcode')\"\r\n        /><sub class=\"red-text\">{{ formErrors.postcode }}</sub><br>\r\n        <span>Description: </span>\r\n        <input \r\n          v-model=\"form.description\"\r\n          type=\"textarea\"\r\n          placeholder=\"Enter your description\"\r\n          @keyup=\"removeErrorMessage('description')\"\r\n        /><sub class=\"red-text\">{{ formErrors.description }}</sub ><br>\r\n        <span>Displayable Address: </span>\r\n        <input \r\n          v-model=\"form.displayable_name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your displayable address\"\r\n          @keyup=\"removeErrorMessage('displayable_name')\"\r\n        /><sub class=\"red-text\">{{ formErrors.displayable_name }}</sub><br>\r\n        <span v-show=\"setImage != ''\">\r\n          <span>Uploaded Image: </span>\r\n          <img v-bind:src=\"setImage\" :width=\"120\" :height=\"120\" alt=\"\" > \r\n        </span><br>\r\n        <span>\r\n          <span>Image upload: </span>\r\n          <input \r\n          type=\"file\" id=\"file\" ref=\"file\" @change=\"handleFileUpload( $event ), removeErrorMessage('image_url')\" accept=\".jpg\"\r\n          /><sub class=\"red-text\">{{ formErrors.image_url }}</sub><br>\r\n        </span>\r\n        <span>Number of bedrooms: </span>\r\n        <select name=\"no_of_bedrooms\" id=\"no_of_bedrooms\" v-model=\"form.no_of_bedrooms\">\r\n            <option v-for=\"i in 100\" :key=\"i\" :value=\"i\">{{ i }}</option>\r\n        </select><br>\r\n        <span>Number of bathrooms: </span>\r\n        <select name=\"no_of_bathrooms\" id=\"no_of_bathrooms\" v-model=\"form.no_of_bathrooms\">\r\n            <option v-for=\"j in 100\" :key=\"j\" :value=\"j\">{{ j }}</option>\r\n        </select><br>\r\n        <span>Price: </span>\r\n        <input \r\n          v-model=\"form.price\"\r\n          type=\"number\"\r\n          placeholder=\"Enter your price\"\r\n          @keyup=\"removeErrorMessage('price')\" \r\n        /><sub class=\"red-text\">{{ formErrors.price }}</sub><br>\r\n        <span>Property Type: </span>\r\n        <select name=\"property_type\" id=\"property_type\" v-model=\"form.property_type\" @change=\"removeErrorMessage('property_type')\">\r\n            <option v-for=\"v, index in property_types\" :key=\"index\" :value=\"v\">{{ v }}</option>\r\n        </select><sub class=\"red-text\">{{ formErrors.property_type }}</sub><br>\r\n        <span>For Sale / For Rent: </span>\r\n        <input \r\n          type=\"radio\" \r\n          v-model=\"form.for_sale_rent\" \r\n          value=\"For Rent\"\r\n        />\r\n        <label>For Rent</label>\r\n        <input \r\n          type=\"radio\" \r\n          v-model=\"form.for_sale_rent\" \r\n          value=\"For Sale\" \r\n        />\r\n        <label>For Sale</label><br>\r\n        <input \r\n          class=\"submit\" \r\n          type=\"submit\" \r\n          value=\"Submit\"\r\n        >\r\n      </form>\r\n      <div v-if=\"formSubmitted\">\r\n        <h3>Form Submitted</h3>\r\n        <p>Name: {{ name }}</p>\r\n        <p>Email: {{ email }}</p>\r\n        <p>Gender: {{ gender }}</p>\r\n        <small>Click on run to launch the app again.</small>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  <script>\r\n    import axios from 'axios'\r\n    export default {\r\n      props: {editFormData : Object},\r\n      watch: {\r\n          editFormData:  {\r\n            // the callback will be called immediately after the start of the observation\r\n            immediate: true, \r\n            handler (val, oldVal) {\r\n              // do your stuff\r\n              this.form = val;\r\n              this.form.isUpdate = true;\r\n              this.setImage = val.image_url;\r\n                console.log('Prop changed: ', val, ' | was: ', oldVal)\r\n            }\r\n          }\r\n          // function(newVal, oldVal) { // watch it\r\n          //   this.form = newVal;\r\n          //   console.log('Prop changed: ', newVal, ' | was: ', oldVal)\r\n          // }\r\n      },  \r\n      data() {\r\n        return {\r\n          name: \"\",\r\n          email: \"\",\r\n          gender: \"\",\r\n          formSubmitted: false,\r\n          setImage: '',\r\n          image_url:'',\r\n          property_types: [],\r\n          form: {\r\n            county:'',\r\n            country:'',\r\n            town:'',\r\n            postcode:'',\r\n            description:'',\r\n            displayable_name:'',\r\n            image_url:'',\r\n            no_of_bedrooms:1,\r\n            no_of_bathrooms:1,\r\n            price:0,\r\n            property_type:'',\r\n            for_sale_rent:'For Rent',\r\n            isUpdate:false,\r\n          },\r\n          formErrors: {\r\n            county:'',\r\n            country:'',\r\n            town:'',\r\n            postcode:'',\r\n            description:'',\r\n            displayable_name:'',\r\n            image_url:'',\r\n            no_of_bedrooms:'',\r\n            no_of_bathrooms:'',\r\n            price:'',\r\n            property_type:'',\r\n            for_sale_rent:''\r\n          },\r\n          errorsMessages: {\r\n            county:{\r\n                required:'This field is required',\r\n            },\r\n            country:{\r\n                required:'This field is required',\r\n            },\r\n            town:{\r\n                required:'This field is required',\r\n            },\r\n            postcode:{\r\n                required:'This field is required',\r\n            },\r\n            description:{\r\n                required:'This field is required',\r\n            },\r\n            displayable_name:{\r\n                required:'This field is required',\r\n            },\r\n            image_url:{\r\n                required:'This field is required',\r\n                allowed:'Only Jpg files allowed'\r\n            },\r\n            no_of_bedrooms:{\r\n                required:'This field is required',\r\n            },\r\n            no_of_bathrooms:{\r\n                required:'This field is required',\r\n            },\r\n            price:{\r\n                required:'Invalid amount',\r\n            },\r\n            property_type:{\r\n                required:'This field is required',\r\n            },\r\n            for_sale_rent:{\r\n                required:'This field is required',\r\n            }\r\n          }\r\n        };\r\n      },\r\n      methods: {\r\n        submitForm: function () {\r\n            \r\n          this.form.image_url = this.image_url;\r\n\r\n          if(!this.validateForm(this.form)){\r\n            return false;\r\n          } else {\r\n            axios.post('http://localhost:8000/api/savePropertyDetails',this.form,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then(response => function(){\r\n            console.log(response);\r\n            })\r\n            .catch(response => function(){\r\n            console.log(response);\r\n            });\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 1000);\r\n          }\r\n        },\r\n        handleFileUpload( event ){\r\n            this.image_url = event.target.files[0];\r\n        },\r\n        removeErrorMessage(tag) {\r\n            this.formErrors[tag] = '';\r\n        },\r\n        validateForm(data) {\r\n            var errorCount = 0;\r\n            if(data.county == ''){\r\n                this.formErrors.county = this.errorsMessages.county.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(data.country == ''){\r\n                this.formErrors.country = this.errorsMessages.country.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(data.postcode == ''){\r\n                this.formErrors.postcode = this.errorsMessages.postcode.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(data.description == ''){\r\n                this.formErrors.description = this.errorsMessages.description.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(data.displayable_name == ''){\r\n                this.formErrors.displayable_name = this.errorsMessages.displayable_name.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(data.property_type == ''){\r\n                this.formErrors.property_type = this.errorsMessages.property_type.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(this.image_url.length == 0 && this.setImage == ''){\r\n                this.formErrors.image_url = this.errorsMessages.image_url.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(this.image_url != '' && this.image_url['type'] != 'image/jpeg'){\r\n                this.formErrors.image_url = this.errorsMessages.image_url.allowed;\r\n                document.getElementById('file').value = '';\r\n                errorCount + 1;\r\n            }\r\n            \r\n            if(data.price <= 0){\r\n                this.formErrors.price = this.errorsMessages.price.required;\r\n                errorCount + 1;\r\n            }\r\n\r\n            if(errorCount > 0) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n      },\r\n      created () {\r\n        axios.get(\"http://localhost:8000/api/fetchPropertyTypes\")\r\n                .then(response => {\r\n                    this.property_types = response.data;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n    }\r\n    };\r\n  </script>\r\n  <style>\r\n    form {\r\n      padding: 10px;\r\n      border: 2px solid black;\r\n      border-radius: 5px;\r\n    }\r\n  \r\n    input {\r\n      padding: 4px 8px;\r\n      margin: 4px;\r\n    }\r\n  \r\n    span {\r\n      font-size: 18px;\r\n      margin: 4px;\r\n      font-weight: 500;\r\n    }\r\n  \r\n    .submit {\r\n      font-size: 15px;\r\n      color: #fff;\r\n      background: #222;\r\n      padding: 6px 12px;\r\n      border: none;\r\n      margin-top: 8px;\r\n      cursor: pointer;\r\n      border-radius: 5px;\r\n    }\r\n    \r\n    .red-text {\r\n        color:red;\r\n    }\r\n  \r\n  </style>"]},"metadata":{},"sourceType":"module"}